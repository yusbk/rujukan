#+AUTHOR: Yusman Kamaleri
#+DATE:
#+TITLE: Rujukan untuk Github

#+options: toc:nil

* Buat git repo dan R pakej

Langkah-langkah untuk buat R pakej dan kemudiannya menghantar ke Github

+ Buat *repo* di Github cth. foo
+ Buat R pakej di direktori yang diinginkan
#+BEGIN_EXAMPLE
setwd("/path/for/package")
devtools::create("foo")
#+END_EXAMPLE

+ Masuk ke direktori /foo/
+ Hantar semua fail-fail didalam direktori /foo/ ke Github
#+BEGIN_EXAMPLE
git init
git add .
git commit -m "Mula foo"
git remote add origin git@work:ybkamaleri/foo.git
git push -u origin master
#+END_EXAMPLE

Sila rujuk di [[https://help.github.com/articles/adding-an-existing-project-to-github-using-the-command-line/][GitHub Guides]] untuk penerangan selajutnya
* Kopi branch di github ke lokal

Bila membuat branch dari pc lain dan ingin membuat salinan branch yang sama di pc
lain.

#+BEGIN_EXAMPLE
git checkout -b [new-branch-lokal] [remote]/[branch-remote]
#+END_EXAMPLE

Contohnya
#+BEGIN_EXAMPLE
git checkout -b new_func_pc2 origin/func_pc1
#+END_EXAMPLE
* Kopi branch tertentu cara lain
Rujukan [[https://stackoverflow.com/questions/9537392/git-fetch-remote-branch][Stackoverflow]]

You need to create a local branch that tracks a remote branch. The following command
will create a local branch named daves_branch, tracking the remote branch
origin/daves_branch. When you push your changes the remote branch will be updated.

#+BEGIN_EXAMPLE
git checkout --track origin/daves_branch
#+END_EXAMPLE

=--track= is shorthand for =git checkout -b [branch] [remotename]/[branch]= where
  [remotename] is origin in this case and [branch] is twice the same, daves_branch in
  this case.
* Tidak dapat kesan email
Bila "unable to auto-detect email" tetapkan begini

#+BEGIN_EXAMPLE
git config --global user.email "you@example.com"
git config --global user.name "Your Name"
#+END_EXAMPLE
* Pelbagai akaun

Untuk membuat pelbagai *SSH* akaun sila rujuk [[https://gist.github.com/jexchan/2351996][Create mulitple SSH accounts]]

Contoh untuk buat =ssh-key=. Tetapkan kekunci utk personal dan kerja seperti dibawah
dan biarkan kosong utk passphrase

#+begin_example
ssh-keygen -t rsa -C "your-email-here"

Enter file in which to save the key (/Users/ra/.ssh/id_rsa): /home/yus/.ssh/id_rsa_work
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
#+end_example

Buka =id_rsa_work.pub= di gedit dan kopi kekunci untuk di masukkan ke Github SSH-key

Kemudian daftarkan ssh-key

#+begin_example
ssh-add -K /path/to/private/key/file
#+end_example

Untuk tambah di fail =.ssh/config= ialah

#+BEGIN_EXAMPLE
Host personal
HostName github.com
User git
IdentityFile ~/.ssh/id_personal

Host work
HostName github.com
User git
IdentityFile ~/.ssh/id_work
#+END_EXAMPLE

Untuk memeriksa username yang dipakai

#+BEGIN_EXAMPLE
git config user.name
#+END_EXAMPLE

Untuk mengklone pelbagai akaun

#+BEGIN_EXAMPLE
git clone git@personal:yusbk/nama_rep.git
git clone git@work:ybkamaleri/nama_rep.git
#+END_EXAMPLE

Untuk menggunakan akaun lain di Github dari yang sedang digunakan

#+BEGIN_EXAMPLE
git remote add origin-personal git@personal:yusbk/nama_rep.git
git add nama_fail
git commit -m "maklumat"
git push -u origin-personal master
#+END_EXAMPLE
* Permission denied
Sekiranya ~permission denied~ bile =git push origin= untuk repo gunakan user.name berlainan contohnya:
#+BEGIN_EXAMPLE
  ERROR: Permission to user.ybk1/repo.git denied to user.ybk2.
  fatal: The remote end hung up unexpectedly
#+END_EXAMPLE

Tukar user.name dengan apa yang sepatutnya... contohnya bila username work diperlukan
dan yang sedang dipakai ialah personal maka tukar ke work seperti begini
#+BEGIN_EXAMPLE
  ssh-add ~/.ssh/id_rsa_work
#+END_EXAMPLE

Sekiranya tidak berhasil boleh coba cara dibawah:

1. Pilihan 1:
Periksa fail =~/.ssh/config= yang ~url~ adalah betul
#+BEGIN_EXAMPLE
  [remote "origin"]
      fetch = +refs/heads/*:refs/remotes/origin/*
      url = git@work:nama_github/nama_repo.git
#+END_EXAMPLE

Boleh juga masukkan di "command line" sebegini
#+BEGIN_EXAMPLE
  git remote set-url origin git@work:nama_github/nama_repo.git
#+END_EXAMPLE

2. Pilihan 2:
Masukkan ~SSH~ semula di github. Tetapi sebelumnya harus buang ssh di cache dengan
=ssh-add -D= kemudian boleh periksa key yang ada dengan =ssh-add -l=. Untuk memasukkan
key-ssh, bukan fail cth =id_rsa_work.pub= dan kopi semua dan salin di Add-SSH di
github.

* Buat Repo melalui terminal

Untuk buat repo kosong di Github sebelum memulakan projek perkongsian. =bare= harus
sentiasa digunakan untuk berkongsi =repo=

#+BEGIN_EXAMPLE
ssh user@host git init --bare /path/to/repo.git
#+END_EXAMPLE

Kemudian semua yang terlibat utk membangunkan =repo= boleh mengkelon =repo= tersebut

#+BEGIN_EXAMPLE
git clone ssh://user@host/path/to/repo.git
#+END_EXAMPLE

* Padam branch
Untuk padamkan lokal branch

#+BEGIN_EXAMPLE
git branch -d <nama branch>
#+END_EXAMPLE

Untuk padamkan remote branch

#+BEGIN_EXAMPLE
git push origin --delete <nama branch>
#+END_EXAMPLE
* Git Aliases

Git aliases yang selalu dipakai

#+BEGIN_EXAMPLE
git config --global alias.ci commit
git config --global alias.st status
git config --global alias.co checkout
git config --global alias.br branch
#+END_EXAMPLE

Untuk menetapkkan git sentiasa memakai =Emacs= sebagai editor

#+BEGIN_EXAMPLE
git config --global core.editor emacs
#+END_EXAMPLE

* Undo atau Revert

Untuk kembali ke sebelum pertukaran tetapi hanya fail-fail di direktori yang sedang
dipakai. Cara pertama hanya menggembalikan =unstaged changes=

#+BEGIN_EXAMPLE
git checkout --l
#+END_EXAMPLE

Untuk menggembalikan pertukaran-pertukaran yang sudah =staged= dan =unstaged=

#+BEGIN_EXAMPLE
git reset --hard
git reset --hard HEAD
#+END_EXAMPLE

Untuk membuang semua pertukaran-pertukaran lokal kerana ingin mendapatkan versi di GitHub

#+BEGIN_EXAMPLE
git reset --hard HEAD
git pull

git reset --hard a123412 #untuk id commit tertentu
#+END_EXAMPLE

Untuk /unstange/ semua fail-fail yang sudah di /stage/ melalui =git add=

#+BEGIN_EXAMPLE
git reset
#+END_EXAMPLE

Untuk menggembalikan fail tertentu atau direktori tertentu

#+BEGIN_EXAMPLE
git checkout <nama_dir atau nama_fail>
#+END_EXAMPLE

* Sekiranya ada konflik

Untuk menyimpan pertukaran-pertukaran lokal sekiranya ada konflik dengan versi Github

#+BEGIN_EXAMPLE
git fetch origin
git status
git pull

#if conflicts then?

git add .
git commit -m "message"
git pull #ini akan bagi error message tapi tidak mengapa

# buka fail yang ada konflik dan betulkan masalah konflik

git add .
git commit -m "fixed conflicts"
git pull

#+END_EXAMPLE
